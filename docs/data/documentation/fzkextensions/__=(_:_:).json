{
  "abstract" : [
    {
      "text" : "Assigns the lhs if it is nil, otherwise it is unmodified.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/FzkExtensions\/documentation\/FzkExtensions"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/FzkExtensions\/documentation\/FzkExtensions\/__=(_:_:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:13FzkExtensions3qqeoiyyxSgz_xyKXKtKlF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "??="
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "text",
        "text" : "<"
      },
      {
        "kind" : "genericParameter",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ">("
      },
      {
        "kind" : "keyword",
        "text" : "inout"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : "?, () "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> "
      },
      {
        "kind" : "typeIdentifier",
        "text" : "T"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "rethrows"
      }
    ],
    "modules" : [
      {
        "name" : "FzkExtensions"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Operator",
    "symbolKind" : "op",
    "title" : "??=(_:_:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "??="
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "text",
              "text" : "<"
            },
            {
              "kind" : "genericParameter",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ">("
            },
            {
              "kind" : "internalParam",
              "text" : "lhs"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "keyword",
              "text" : "inout"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : "?, "
            },
            {
              "kind" : "internalParam",
              "text" : "rhs"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "attribute",
              "text" : "@autoclosure "
            },
            {
              "kind" : "text",
              "text" : "() "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "T"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "rethrows"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The property to modify. The property must be modifiable.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "lhs"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The value to assign if the lhs is nil. The rhs value will not be read unless the lhs value is nil. This means that expensive operations are only paid for if necessary.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "rhs"
        }
      ]
    },
    {
      "content" : [
        {
          "anchor" : "discussion",
          "level" : 2,
          "text" : "Discussion",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ Given the class Foo",
            "class Foo {",
            "    var bar: Int?",
            "}",
            "",
            "\/\/ The following code",
            "func ensureValue(foo: Foo) -> Foo {",
            "    foo.bar = foo.bar ?? 1",
            "    return foo",
            "}",
            "\/\/ can be rewritten to",
            "func ensureValue(foo: Foo) -> Foo {",
            "    foo.bar ??= 1",
            "    return foo",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/fzkextensions\/__=(_:_:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://FzkExtensions/documentation/FzkExtensions": {
  "abstract" : [
    {
      "text" : "A collection of small extensions and custom operators.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/FzkExtensions\/documentation\/FzkExtensions",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "FzkExtensions",
  "type" : "topic",
  "url" : "\/documentation\/fzkextensions"
},
"doc://FzkExtensions/documentation/FzkExtensions/__=(_:_:)": {
  "abstract" : [
    {
      "text" : "Assigns the lhs if it is nil, otherwise it is unmodified.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "??="
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?, () "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "rethrows"
    }
  ],
  "identifier" : "doc:\/\/FzkExtensions\/documentation\/FzkExtensions\/__=(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "??=(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/fzkextensions\/__=(_:_:)"
}
}
}